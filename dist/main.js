"use strict";class e{static formatTime=e=>{const t=Math.floor(e/60),r=e%60;return`${String(t).padStart(2,"0")}:${String(r).padStart(2,"0")}`}}class t{static getImage(e){let t="./images/";switch(e){case 1:t+="elephant.png";break;case 2:t+="giraffe.png";break;case 3:t+="/hippo.png";break;case 4:t+="monkey.png";break;case 5:t+="panda.png";break;case 6:t+="parrot.png";break;case 7:t+="penguin.png";break;case 8:t+="pig.png";break;case 9:t+="rabbit.png";break;case 10:t+="snake.png";break;default:console.log("cellule non trouvée")}return t}}class r{constructor(){this.gameBoard=[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],this.resultBoard=this.randomArrayGenerator()}randomArrayGenerator=()=>{let e=[],t=[0,0,0,0,0,0,0,0,0,0];for(let r=0;r<this.gameBoard.length;r++){let r=[];for(let e=0;e<this.gameBoard[0].length;e++){let e=!1;for(;!e;){let a=Math.floor(10*Math.random());t[a]<2&&(r.push(a+1),t[a]++,e=!0)}}e.push(r)}return e}}const a=new class{constructor(){this.seconds=0,this.intervalId=null,this.chronometer=document.querySelector("#chronometer")}updateChronometer=()=>{this.seconds++;const t=e.formatTime(this.seconds);this.chronometer.innerText=`${t}`};startChronometer=()=>{this.intervalId=setInterval(this.updateChronometer,1e3)};stopChronometer=()=>{clearInterval(this.intervalId)}},o=new class{constructor(e){this.gameBoard=new r,this.chronometer=e,this.content=document.querySelector("#content"),this.modal=document.querySelector("#modal"),this.record=document.querySelector(".record"),this.message=document.querySelector(".message"),this.odlSelection=[],this.nbClick=0,this.canPlay=!0,this.score=0}displayGameBoard=()=>{let e="";this.gameBoard.gameBoard.forEach(((r,a)=>{e+="<div>",r.forEach(((r,o)=>{e+=0===r?`<button class='item' id='button-${a}-${o}'><span class='text-item'>Dévoiler</span></button>`:`<img src='${t.getImage(r)}' alt='image' class='p_size-card'/>`})),e+="</div>"})),this.content.innerHTML=e,this.gameBoard.gameBoard.forEach(((e,t)=>{e.forEach(((e,r)=>{if(0===e){document.getElementById(`button-${t}-${r}`).addEventListener("click",(()=>{this.checkCell(`${t}-${r}`)}))}}))}))};checkCell=e=>{if(this.canPlay){this.nbClick++;const t=e.substr(0,1),r=e.substr(2,1);this.gameBoard.gameBoard[t][r]=this.gameBoard.resultBoard[t][r],this.displayGameBoard(),this.nbClick>1?(this.canPlay=!1,setTimeout((()=>{this.gameBoard.gameBoard[t][r]!==this.gameBoard.resultBoard[this.odlSelection[0]][this.odlSelection[1]]&&(this.gameBoard.gameBoard[t][r]=0,this.gameBoard.gameBoard[this.odlSelection[0]][this.odlSelection[1]]=0),this.displayGameBoard(),this.canPlay=!0,this.nbClick=0,this.odlSelection=[t,r],this.gameBoard.gameBoard.flat().includes(0)||(this.chronometer.stopChronometer(),this.score=this.chronometer.seconds,this.viewBestScore(this.score),this.viewModal())}),1e3)):this.odlSelection=[t,r]}};viewModal=()=>{this.content.classList.add("hide"),this.modal.classList.remove("hide")};viewBestScore=t=>{let r=localStorage.getItem("bestScoreMemoAnimauxDP");r=r?parseInt(r):3600,t<r?(3600!==r&&(this.message.textContent="Bravo ! Vous avez battu votre reccord !"),r=t,localStorage.setItem("bestScoreMemoAnimauxDP",r)):this.message.textContent="Rejouez pour tenter de battre votre record.";const a=e.formatTime(r);this.record.textContent=`Votre meilleur temps est ${a}`}}(a),s=document.querySelector(".restart");a.startChronometer(),o.displayGameBoard(),s.addEventListener("click",(()=>{location.reload()}));
